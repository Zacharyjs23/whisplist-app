rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function signedIn() {
      return request.auth != null;
    }

    match /users/{uid} {
      allow read: if resource.data.publicProfileEnabled == true || request.auth.uid == uid;
      allow create, update, delete: if request.auth.uid == uid;

      match /notifications/{notificationId} {
        allow write: if request.auth.uid == uid;
      }

      match /referrals/{referralId} {
        allow write: if request.auth.uid == uid;
      }

      match /journalEntries/{entryId} {
        allow read, write: if request.auth.uid == uid;
      }

      match /followers/{followerId} {
        allow read, write: if request.auth.uid == followerId;
      }

      match /following/{targetUserId} {
        allow read, write: if request.auth.uid == uid;
      }
    }

    match /wishes/{wishId} {
      allow read: if !resource.data.hidden;
      allow create: if signedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if signedIn() && request.auth.uid == resource.data.userId;

      match /comments/{commentId} {
        allow read: if !resource.data.hidden;
        allow create: if signedIn() && request.resource.data.userId == request.auth.uid;
        allow update, delete: if signedIn() && request.auth.uid == resource.data.userId;
      }

      match /gifts/{giftId} {
        allow read: if true;
        allow write: if signedIn();
      }

      match /commentReports/{reportId} {
        allow create: if signedIn();
        allow read: if false;
      }
    }

    match /gifts/{giftId} {
      allow write: if signedIn();
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
